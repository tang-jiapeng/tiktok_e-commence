syntax = "proto3";

package order;

import "cart.proto";

option go_package = "order";

service OrderService {
  rpc PlaceOrder(PlaceOrderReq) returns (PlaceOrderResp) {}
  rpc ListOrder(ListOrderReq) returns (ListOrderResp) {}
  rpc MarkOrderPaid(MarkOrderPaidReq) returns (MarkOrderPaidResp) {}
  rpc GetOrder(GetOrderReq) returns (GetOrderResp) {}
}

message Address {
  string name = 1;
  string phone_number = 2;
  string province = 3;
  string city = 4;
  string region = 5;
  string detail_address = 6;
}

message Product {
  int32 id = 1;
  string name = 2;
  string description = 3;
  string picture = 4;
  float price = 5;
  int32 quantity = 6;
}

message PlaceOrderReq {
  int32 user_id = 1;
  Address address = 2;
  repeated OrderItem order_items = 3;
  float total_cost = 4;
}

message OrderItem {
  cart.CartItem item = 1;
  float cost = 2;
}

message OrderResult {
  string order_id = 1;
}

message PlaceOrderResp {
  int32 status_code = 1;
  string status_msg = 2;
  OrderResult order = 3;
}

message ListOrderReq {
  int32 user_id = 1;
}

message Order {
  string order_id = 1;
  Address address = 2;
  repeated Product products = 3;
  float cost = 4;
  string created_at = 5;
  int32 status = 6;
}

message ListOrderResp {
  int32 status_code = 1;
  string status_msg = 2;
  repeated Order orders = 3;
}

message MarkOrderPaidReq {
  int32 user_id = 1;
  string order_id = 2;
}

message MarkOrderPaidResp {
  int32 status_code = 1;
  string status_msg = 2;
}

message GetOrderReq {
  int32 user_id = 1;
  string order_id = 2;
}

message GetOrderResp {
  int32 status_code = 1;
  string status_msg = 2;
  Order order = 3;
}